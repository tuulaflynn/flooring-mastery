Entities
--------
Order
    - Integer orderNumber
    - String customerName
    - String state
    - BigDecimal taxRate
    - String productType
    - BigDecimal area
    - BigDecimal costPerSquareFoot
    - BigDecimal laborCostPerSquareFoot
    - BigDecimal materialCost
    - BigDecimal laborCost
    - BigDecimal tax
    - BigDecimal total


N.B. [tax rates - stores as whole numbers? not seeming to be true]


User stories
------------
1. Display orders
2. Add an order
3. Edit an order
4. Remove an order
5. Export all data
6. Quite


- add error handling for enter state abbreviation for adding an order.
- check that no part of my program relies of existience of an order only if there is an existance of a collection,
as the collection might be empty due to an order being deleted so in reality no files exist for that day. Check display option for this.

Reelection on design
--------------------
Problems with having entities only as an interface:
	- fields are public, so proper encapsulation is not achieved (all properties are public in an interface)
	- multithreading would create problems, as there are more than one access to the database (
	- for my purposes, I had to make my methods static to have them in the interface, this meant I couldn't unit test these methods (as they were static)
	-